.cd-comment-underlay {
  position: absolute;
  z-index: -1;

  .cd-reformattedComments & {
    mix-blend-mode: color;
  }
}

/*
  The hierarchy of layer types (starting with the highest priority):
  1. Target
  2. Changed (quick flash with green)
  3. Deleted
  4. Own
  5. New
  6. Hovered (but each hovered subtype has more priority than non-hovered)
*/

.cd-comment-underlay-hovered,
.cd-comment-overlay-content {
  background-color: var(--cd-comment-hovered-background-color);
}

.cd-comment-underlay-deleted.cd-comment-underlay-deleted {
  background-color: var(--cd-comment-deleted-background-color);
}

.cd-comment-underlay-deleted.cd-comment-underlay-deleted.cd-comment-underlay-hovered,
.cd-comment-overlay-deleted.cd-comment-overlay-deleted .cd-comment-overlay-content {
  background-color: var(--cd-comment-deleted-hovered-background-color);
}

.cd-comment-underlay-changed.cd-comment-underlay-changed {
  background-color: var(--cd-comment-new-background-color);
}

.cd-comment-underlay-changed.cd-comment-underlay-changed.cd-comment-underlay-hovered,
.cd-comment-overlay-changed.cd-comment-overlay-changed .cd-comment-overlay-content {
  background-color: var(--cd-comment-new-hovered-background-color);
}

.cd-comment-underlay-target.cd-comment-underlay-target {
  background-color: var(--cd-comment-target-background-color);
}

.cd-comment-underlay-target.cd-comment-underlay-target.cd-comment-underlay-hovered,
.cd-comment-overlay-target.cd-comment-overlay-target .cd-comment-overlay-content {
  background-color: var(--cd-comment-target-hovered-background-color);
}

.cd-comment-overlay {
  position: absolute;
  z-index: 1;
}

.cd-comment-overlay-marker {
  position: absolute;
  top: 0;
  width: 3px;
  height: 100%;

  .cd-comment-overlay-new &,
  .cd-comment-overlay-changed.cd-comment-overlay-changed & {
    background-color: var(--cd-comment-new-marker-color);
  }

  .cd-comment-overlay-own & {
    background-color: var(--cd-comment-own-marker-color);
  }

  .cd-comment-overlay-deleted & {
    background-color: var(--cd-comment-deleted-marker-color);
  }

  .cd-comment-overlay-target.cd-comment-overlay-target & {
    background-color: var(--cd-comment-target-marker-color);
  }
}

.cd-comment-overlay-line-closingGap {
  position: absolute;
  top: 0;
  width: 1px;
  height: 100%;
  background-color: #c8ccd1;
}

.cd-comment-overlay-innerWrapper {
  position: absolute;
  z-index: 1;
  bottom: 0;
  font-size: 0.875rem;
  display: none;
  flex-direction: row;

  .cd-comment-overlay-hovered & {
    display: flex;
  }

  .ltr & {
    direction: ltr;

    // Fix for Firefox 56
    right: 0;
  }

  .rtl & {
    direction: rtl;

    // Fix for Firefox 56
    left: 0;
  }
}

.cd-comment-overlay-gradient {
  width: 1.5em;
  display: inline-block;
  -moz-user-select: none;
  -webkit-user-select: none;
  user-select: none;

  .ltr & {
    background-image: linear-gradient(to left, var(--cd-comment-hovered-background-color), rgba(255, 255, 255, 0));
  }

  .rtl & {
    background-image: linear-gradient(to right, var(--cd-comment-hovered-background-color), rgba(255, 255, 255, 0));
  }

  .cd-comment-overlay-deleted.cd-comment-overlay-deleted & {
    .ltr & {
      background-image: linear-gradient(to left, var(--cd-comment-deleted-hovered-background-color), rgba(255, 255, 255, 0));
    }

    .rtl & {
      background-image: linear-gradient(to right, var(--cd-comment-deleted-hovered-background-color), rgba(255, 255, 255, 0));
    }
  }

  // Gradient can't be animated. Not with jquery.ui and jquery.color.
  .cd-comment-overlay-target.cd-comment-overlay-target.cd-comment-overlay-target & {
    background-image: none;
  }

  .cd-comment-overlay-changed.cd-comment-overlay-changed & {
    .ltr & {
      background-image: linear-gradient(to left, var(--cd-comment-new-hovered-background-color), rgba(255, 255, 255, 0));
    }

    .rtl & {
      background-image: linear-gradient(to right, var(--cd-comment-new-hovered-background-color), rgba(255, 255, 255, 0));
    }
  }
}

.cd-comment-overlay-content {
  display: inline-flex;
  padding: 0 0.5em;
  flex-direction: row;
  pointer-events: all;

  > .oo-ui-buttonElement {
    line-height: 1.4285714em;
  }

  .sitedir-rtl.ltr &,
  .sitedir-ltr.ltr .mw-content-rtl & {
    margin-left: 0;
    margin-right: 0.5em;
  }

  .sitedir-ltr.rtl &,
  .sitedir-rtl.rtl .mw-content-ltr & {
    margin-left: 0.5em;
    margin-right: 0;
  }

  .cd-comment-overlay-stretchedStart & {
    .sitedir-rtl.ltr &,
    .sitedir-ltr.ltr .mw-content-rtl & {
      margin-right: calc(~"var(--cd-content-start-margin) - var(--cd-comment-fallback-side-margin)");
    }

    .sitedir-ltr.rtl &,
    .sitedir-rtl.rtl .mw-content-ltr & {
      margin-left: calc(~"var(--cd-content-start-margin) - var(--cd-comment-fallback-side-margin)");
    }
  }

  .cd-comment-overlay-stretchedEnd & {
    .sitedir-ltr.ltr &,
    .sitedir-rtl.ltr .mw-content-ltr & {
      padding-right: calc(~"var(--cd-content-start-margin) - var(--cd-comment-fallback-side-margin) + 0.5em");
    }

    .sitedir-rtl.rtl &,
    .sitedir-ltr.rtl .mw-content-rtl & {
      padding-left: calc(~"var(--cd-content-start-margin) - var(--cd-comment-fallback-side-margin) + 0.5em");
    }
  }
}

.sitedir-ltr .cd-comment-overlay-marker,
.sitedir-ltr .cd-comment-overlay-line,
.sitedir-rtl .mw-content-ltr .cd-comment-overlay-marker,
.sitedir-rtl .mw-content-ltr .cd-comment-overlay-line {
  left: -1px;
}

.sitedir-rtl .cd-comment-overlay-marker,
.sitedir-rtl .cd-comment-overlay-line,
.sitedir-ltr .mw-content-rtl .cd-comment-overlay-marker,
.sitedir-ltr .mw-content-rtl .cd-comment-overlay-line {
  right: -1px;
}

.cd-comment-button-ooui.cd-comment-button-ooui {
  .ltr & {
    margin-right: 0;

    &:not(:first-child) {
      margin-left: 1em;
    }

    &.oo-ui-iconElement:first-child {
      margin-left: 0;
    }
  }

  .rtl & {
    margin-left: 0;

    &:not(:first-child) {
      margin-right: 1em;
    }

    &.oo-ui-iconElement:first-child {
      margin-right: 0;
    }
  }
}

.cd-comment-button-ooui-icon.cd-comment-button-ooui-icon > .oo-ui-buttonElement-button {
  body:not(.skin-monobook) & {
    padding-top: 1.4285714em;
    min-width: unset;
  }

  .ltr:not(.skin-monobook) & {
    padding-left: 1.4285714em;

    > .oo-ui-iconElement-icon {
      left: 0;
    }
  }

  .rtl:not(.skin-monobook) & {
    padding-right: 1.4285714em;

    > .oo-ui-iconElement-icon {
      right: 0;
    }
  }
}

.cd-commentLayersContainer {
  position: relative;
  pointer-events: none;

  .sitedir-ltr &,
  .sitedir-rtl .mw-content-ltr & {
    direction: ltr;
  }

  .sitedir-rtl &,
  .sitedir-ltr .mw-content-rtl & {
    direction: rtl;
  }

  &-parent-relative {
    position: relative;
    z-index: 0;

    .mw-parser-output & {
      display: flow-root;

      // `display: flow-root` should do the job of `overflow: hidden` or `overflow: auto` if it's
      // set for an element. `overflow: auto` (present in
      // https://en.wikipedia.org/wiki/Template:Discussion_top, for example) can create a scrollbar
      // in some cases.
      overflow: unset !important;
    }
  }
}
